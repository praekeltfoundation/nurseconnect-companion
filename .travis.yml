language: elixir


script:
  # This is basically `mix test` with coverage enabled.
  - mix coveralls.json
  - mix format --check-formatted
  # This will mention FIXME and TODO comments without failing, any other issue
  # fails the build.
  - mix credo

after_success:
  - bash <(curl -s https://codecov.io/bash)

jobs:
  include:
    # Run elixir tests
    - elixir: '1.6'
      otp_release: '20.3'

    # Run dialyzer
    - elixir: '1.6'
      otp_release: '20.3'
      env:
        # Env var to differentiate between builds in travis CI
        - RUN_DIALYZER=1
      cache:
        directories:
          - $HOME/.mix
          - $HOME/.pltcache
      before_script:
        - mix compile
        # Juggle cached PLTs.
        - mkdir -p ~/.pltcache
        - cp ~/.pltcache/*-dev.plt _build/dev/ || true
        - travis_wait mix dialyzer --plt
        - cp _build/dev/*-dev.plt ~/.pltcache/
        # Now that we've done the PLT dance, we can run dialyzer.
      script:
        - mix dialyzer --halt-exit-status

    # Deploy on merge to develop
    - language: python
      python: "3.6"
      sudo: required
      dist: trusty
      services: [docker]
      env:
        - IMAGE_NAME=praekeltfoundation/nurseconnect-companion:develop
        - REGISTRY_USER=praekeltorgdeploy
        # REGISTRY_PASS
        - secure: "APKendLhPMuHBp85v/1R8umrhxhLCe3R9BMnTkbBFzCKet+5w00oWiIolUTo/ctZE7jfC0b911uVnKUZ0MgcoKlF9Q2aQdNZvTDim89clTByXC8/ftswl4wfw0fOeMjiKn+fE9jyIiILBC1x4f0dU+UedOWHrpRKWknH+/Cq/SCJxWuYUEqhiBTTRny16gW44/HKmgw2dCoFIioDhGuwfVI2JHJflo//dzMcfclUOW9ZoIeK+tsQxOFpKYYDLkcPXCQxxSWxFFL8AZlbDQeYKLqH8jOa/c5lM/vs0YEoObmu9LfIDj8VMrHENuto5kzAKNFXgWOS4LKwunNG3yj5VB0o8uOYGYDE4sLxhyvrTwkaza7I+zlmb2kPnp0L4eCVvXxdcl0BBw6H1/k85qGu7bXJdaA3RdcsSfS/S6pRCKE4UfHRF8zulHRgREv1szpHOvHpyeiU3fhbJSl+ExXrM37sJ1CQmMFh1hEoc5Av9JkNCnEoBWfx6HHd9fcSvbwuIzZHq1V5I8rLUTLcrktszW/4hk9aXqaupqP0VdcBaXATLIFDQXe8ygfPO9iQ9g1O9wRz2/sr9iu6/Jbt2zoH56szErpSvfAsLM8toZgx4LPmcAJgFTh6D4ly/22UKT6Oqk4Wyc7/OVKc9pNuk3V4tQ8zxiy3aHU4W239Fv5RPks="
      before_script:
        - docker pull "$IMAGE_NAME" || true
        - pip install -U pip
        - pip install -r seaworthy/requirements.txt
      script:
        - docker build --tag "$IMAGE_NAME" --cache-from "$IMAGE_NAME" .
        - (cd seaworthy; py.test -v --phoenix-image "$IMAGE_NAME" test.py)
      before_deploy:
        - pip install docker-ci-deploy===0.3.0
        - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"
      deploy:
        provider: script
        script: dcd --version "$(git rev-parse --short HEAD)" --version-latest "$IMAGE_NAME"
        on:
          branch: develop
      after_success: []
